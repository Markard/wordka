name: CD Pipeline

on:
  workflow_run:
    workflows: [ "CI Pipeline" ]
    types: [ completed ]

jobs:
  deploy:
    runs-on: [ self-hosted ]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull latest request
        run: docker pull markarddev/wordka:latest

      - name: Deploy PostgreSQL
        run: |
          docker stop wordka_postgres
          docker rename wordka_postgres wordka_postgres_old
          docker run -d \
            --name wordka_postgres \
            -e POSTGRES_DB=${{ secrets.PG_DB }} \
            -e POSTGRES_USER=${{ secrets.PG_USER }} \
            -e POSTGRES_PASSWORD=${{ secrets.PG_PASS }} \
            -p ${{ secrets.PG_PORT }}:${{ secrets.PG_PORT }} \
            --health-cmd="pg_isready -U ${{ secrets.PG_USER }} -d ${{ secrets.PG_DB }}" \
            --health-interval=10s \
            --health-timeout=5s \
            --health-retries=5 \
            --health-start-period=10s \
            --restart unless-stopped \
            --network wordka_network \
            -v /var/local/pg_data:/var/lib/postgresql/data \
            postgres:17.4-alpine
          docker rm wordka_postgres_old

      - name: Deploy app
        run: |
          docker stop wordka_app
          docker rename wordka_app wordka_app_old
          docker run -d \
            --name wordka_app \
            -e APP_ENV="${{ vars.APP_ENV }}" \
            -e ES256_PRIVATE_KEY="${{ secrets.ES256_PRIVATE_KEY }}" \
            -e ES256_PUBLIC_KEY="${{ secrets.ES256_PUBLIC_KEY }}" \
            -e PG_DB="${{ secrets.PG_DB }}" \
            -e PG_USER="${{ secrets.PG_USER }}" \
            -e PG_PASS="${{ secrets.PG_PASS }}" \
            -e PG_PORT="${{ secrets.PG_PORT }}" \
            -e PG_HOST=wordka_postgres \
            -p 80:80 \
            --restart always \
            --network wordka_network \
            --health-cmd="curl -f http://localhost/health || exit 1" \
            --health-interval=10s \
            --health-timeout=5s \
            --health-retries=5 \
            markarddev/wordka:latest
          docker rm wordka_app_old

      - name: Migrate
        run: make migrate-up PG_DSN=postgres://${{ secrets.PG_USER }}:${{ secrets.PG_PASS }}@localhost:${{ secrets.PG_PORT }}/${{ secrets.PG_DB }}?sslmode=disable