services:
  app:
    image: markarddev/wordka:latest
    ports:
      - "80:80"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wordka_network

  postgres:
    image: postgres:17.4-alpine
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - /var/local/pg_data:/var/lib/postgresql/data
    ports:
      - ${PG_PORT}:${PG_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - wordka_network

networks:
  wordka_network:
    driver: bridge